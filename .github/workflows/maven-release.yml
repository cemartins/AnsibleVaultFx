name: Release

on: [workflow_dispatch]

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Configure git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Checkout master branch
        run: git checkout master
      - name: Prepare release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --batch-mode release:prepare -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
      - name: Upload relese properties
        uses: actions/upload-artifact@v1
        with:
          name: release-properties
          path: relese.properties

  publish_macos:
    runs-on: macos-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tags/${GITHUB_REF}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Configure git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Download release properties
        uses: actions/download-artifact@v2
        with:
          name: release-properties
      - name: Perform release for MacOs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --batch-mode -Darguments="-Dmaven.javadoc.skip=true" release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
      - name: Stage release
        run: mkdir staging && cp target/AnsibleVaultFX*.dmg staging
      - name: Publish release
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging

  publish_linux:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tags/${GITHUB_REF}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Configure git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Download release properties
        uses: actions/download-artifact@v2
        with:
          name: release-properties
      - name: Perform release for Linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --batch-mode -Darguments="-Dmaven.javadoc.skip=true" release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
      - name: Stage release
        run: mkdir staging && cp target/AnsibleVaultFX*.jar staging
      - name: Publish release
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging

  publish_windows:
    runs-on: windows-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tags/${GITHUB_REF}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Configure git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Download release properties
        uses: actions/download-artifact@v2
        with:
          name: release-properties
      - name: Perform release for Windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --batch-mode -Darguments="-Dmaven.javadoc.skip=true" release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
      - name: Stage release
        run: mkdir staging && cp target/AnsibleVaultFX*.jar staging
      - name: Publish release
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging